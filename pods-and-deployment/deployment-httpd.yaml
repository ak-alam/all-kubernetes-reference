# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: httpd
#   labels:
#     app: httpd
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: httpd
#   template:
#     metadata:
#       labels:
#         app: httpd
#     spec:
#       containers:
#       - name: httpd
#         image: httpd:latest
#         ports:
#         - containerPort: 80


# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-deployment
#   labels:
#     app: web-serber-nginx
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#         app: nginx-pod
#   template:
#     metadata:
#       labels:
#         app: nginx-pod
#     spec:
#       containers:
#       - name: nginx
#         image: nginx:latest
#         ports:
#         - containerPort: 80


# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-deployment
#   labels:
#     app: nginx
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#         - name: nginx
#           image: nginx:latest
#           ports:
#             - containerPort: 80
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deploy
  namespace: xfusion
  labels:
    app: webserver
spec:
  selector:
    matchLabels:
      app: myapp
  # minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2 
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: httpd
        image: httpd:2.4.25
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
spec:
  selector:
    app: webserver
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30008
    protocol: TCP


